{"version":3,"sources":["http-common.js","services/TransacaoService.js","services/CategoriaService.js","components/CategoriasOptions.js","components/Transacao/AddTransacao.js","components/Transacao/Transacao.js","components/Transacao/TransacaoList.js","Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","http","get","id","data","post","put","delete","title","CategoriasOptions","useState","categorias","setCategorias","useEffect","getCategorias","CategoriaDataService","then","response","console","log","catch","e","map","categoria","index","value","nome","AddTransacao","initialTutorialState","titulo","valor","tipo","created_at","tutorial","setTutorial","submitted","setSubmitted","handleInputChange","event","target","name","className","onClick","Form","Group","controlId","Label","Control","type","onChange","as","Button","variant","TutorialDataService","Transacao","props","currentTransacao","setCurrentTransacao","message","setMessage","match","params","TransacaoDataService","history","push","TransacaoList","transacoes","setTransacoes","currentIndex","setCurrentIndex","searchTitle","setSearchTitle","getTransacoes","setActiveTutorial","transacao","placeholder","key","toFixed","replace","to","Header","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","App","Container","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.021ff91d.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://api.curicows.tk/api/\"\r\n  /*baseURL: \"http://127.0.0.1:8000/\"*/\r\n  /*headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }*/\r\n});\r\n","import http from \"../http-common\";\r\n\r\nconst getAll = () => {\r\n    return http.get(\"/transacao\");\r\n};\r\n\r\nconst get = id => {\r\n    return http.get(`/transacao/${id}`);\r\n};\r\n\r\nconst create = (data) => {\r\n    return http.post(\"/transacao\", data);\r\n};\r\n\r\nconst update = (id, data) => {\r\n    return http.put(`/transacao/${id}`, data);\r\n};\r\n\r\nconst remove = id => {\r\n    return http.delete(`/transacao/${id}`);\r\n};\r\n\r\nconst findByTitle = title => {\r\n    return http.get(`/transacao?title=${title}`);\r\n};\r\n\r\nexport default {\r\n    getAll,\r\n    get,\r\n    create,\r\n    update,\r\n    remove,\r\n    findByTitle\r\n};\r\n","import http from \"../http-common\";\r\n\r\nconst getAll = () => {\r\n    return http.get(\"/categoria\");\r\n};\r\n\r\nconst get = id => {\r\n    return http.get(`/categoria/${id}`);\r\n};\r\n\r\nconst create = data => {\r\n    return http.post(\"/categoria\", data);\r\n};\r\n\r\nconst remove = id => {\r\n    return http.delete(`/categoria/${id}`);\r\n};\r\n\r\nexport default {\r\n    getAll,\r\n    get,\r\n    create,\r\n    remove\r\n};\r\n","import React, {useEffect, useState} from \"react\";\r\nimport CategoriaDataService from \"../services/CategoriaService\";\r\n\r\nconst CategoriasOptions = () => {\r\n\r\n    const [categorias, setCategorias] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getCategorias();\r\n    }, []);\r\n\r\n    const getCategorias = () => {\r\n        CategoriaDataService.getAll()\r\n            .then(response => {\r\n                setCategorias(response.data);\r\n                console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    return categorias.map((categoria, index) => (\r\n                <option value={categoria.id}>{categoria.nome}</option>\r\n            ));\r\n}\r\n\r\nexport default CategoriasOptions;\r\n","import React, {useState} from \"react\";\r\nimport TutorialDataService from \"../../services/TransacaoService\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport CategoriasOptions from \"../CategoriasOptions\";\r\n\r\nconst AddTransacao = () => {\r\n    const initialTutorialState = {\r\n        id: null,\r\n        titulo: \"\",\r\n        valor: 0.00,\r\n        tipo: \"1\",\r\n        categoria: \"1\",\r\n        created_at: null\r\n    };\r\n    const [tutorial, setTutorial] = useState(initialTutorialState);\r\n    const [submitted, setSubmitted] = useState(false);\r\n\r\n    const handleInputChange = event => {\r\n        const {name, value} = event.target;\r\n        setTutorial({...tutorial, [name]: value});\r\n    };\r\n\r\n    const saveTutorial = () => {\r\n        TutorialDataService.create(tutorial)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                setTutorial({\r\n                    id: response.data.id,\r\n                    titulo: response.data.titulo,\r\n                    valor: response.data.valor,\r\n                    tipo: response.data.tipo,\r\n                    categoria: response.data.categoria,\r\n                    created_at: response.data.created_at\r\n                });\r\n\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const newTutorial = () => {\r\n        setTutorial(initialTutorialState);\r\n        setSubmitted(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"submit-form\">\r\n            {submitted ? (\r\n                <div>\r\n                    <h4>You submitted successfully!</h4>\r\n                    <button className=\"btn btn-success\" onClick={newTutorial}>\r\n                        Add\r\n                    </button>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <Form>\r\n                        <Form.Group controlId=\"addTransacao.titulo\">\r\n                            <Form.Label>Titulo</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"titulo\" value={tutorial.titulo} onChange={handleInputChange}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"addTransacao.valor\">\r\n                            <Form.Label>Valor</Form.Label>\r\n                            <Form.Control type=\"number\" name=\"valor\" value={tutorial.valor} onChange={handleInputChange}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"addTransacao.tipo\">\r\n                            <Form.Label>Tipo</Form.Label>\r\n                            <Form.Control as=\"select\" name=\"tipo\" value={tutorial.tipo} onChange={handleInputChange}>\r\n                                <option value={\"1\"}>Entrada</option>\r\n                                <option value={\"2\"}>Saida</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"addTransacao.ControlSelect1\">\r\n                            <Form.Label>Categoria</Form.Label>\r\n                            <Form.Control as=\"select\" name=\"categoria\" value={tutorial.categoria} onChange={handleInputChange}>\r\n                                <CategoriasOptions />\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\" onClick={saveTutorial}>\r\n                            Enviar\r\n                        </Button>\r\n                    </Form>\r\n\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddTransacao;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport TransacaoDataService from \"../../services/TransacaoService\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport CategoriasOptions from \"../CategoriasOptions\";\r\n\r\nconst Transacao = props => {\r\n    const initialTransacaoState = {\r\n        id: null,\r\n        titulo: \"\",\r\n        valor: 0.00,\r\n        tipo: \"1\",\r\n        Transacao: \"1\",\r\n        created_at: null\r\n    };\r\n    const [currentTransacao, setCurrentTransacao] = useState(initialTransacaoState);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const getTransacao = id => {\r\n        TransacaoDataService.get(id)\r\n            .then(response => {\r\n                setCurrentTransacao(response.data);\r\n                console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getTransacao(props.match.params.id);\r\n    }, [props.match.params.id]);\r\n\r\n    const handleInputChange = event => {\r\n        const {name, value} = event.target;\r\n        setCurrentTransacao({...currentTransacao, [name]: value});\r\n    };\r\n\r\n    const updateTransacao = () => {\r\n        TransacaoDataService.update(currentTransacao.id, currentTransacao)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                setMessage(\"The Transacao was updated successfully!\");\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const deleteTransacao = () => {\r\n        TransacaoDataService.remove(currentTransacao.id)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                props.history.push(\"/Transacaos\");\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {currentTransacao ? (\r\n                <div className=\"edit-form\">\r\n                    <h4>Transacao</h4>\r\n                    <Form>\r\n                        <Form.Group controlId=\"addTransacao.titulo\">\r\n                            <Form.Label>Titulo</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"titulo\" value={currentTransacao.titulo} onChange={handleInputChange}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"addTransacao.valor\">\r\n                            <Form.Label>Valor</Form.Label>\r\n                            <Form.Control type=\"number\" name=\"valor\" value={currentTransacao.valor} onChange={handleInputChange}/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"addTransacao.tipo\">\r\n                            <Form.Label>Tipo</Form.Label>\r\n                            <Form.Control as=\"select\" name=\"tipo\" value={currentTransacao.tipo} onChange={handleInputChange}>\r\n                                <option value={\"1\"}>Entrada</option>\r\n                                <option value={\"2\"}>Saida</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"addTransacao.ControlSelect1\">\r\n                            <Form.Label>Categoria</Form.Label>\r\n                            <Form.Control as=\"select\" name=\"categoria\" value={currentTransacao.categoria}\r\n                                          onChange={handleInputChange}>\r\n                                <CategoriasOptions/>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Form>\r\n\r\n                    <Button variant={\"danger\"} className=\"mr-2\" onClick={deleteTransacao}>\r\n                        Deletar\r\n                    </Button>\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant={\"success\"}\r\n                        onClick={updateTransacao}\r\n                    >\r\n                        Atualizar\r\n                    </Button>\r\n                    <p>{message}</p>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <br/>\r\n                    <p>Please click on a Transacao...</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Transacao;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport TransacaoDataService from \"../../services/TransacaoService\";\r\nimport CategoriaDataService from \"../../services/CategoriaService\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nconst TransacaoList = () => {\r\n    const [transacoes, setTransacoes] = useState([]);\r\n    const [categorias, setCategorias] = useState([]);\r\n    const [currentTransacao, setCurrentTransacao] = useState(null);\r\n    const [currentIndex, setCurrentIndex] = useState(-1);\r\n    const [searchTitle, setSearchTitle] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        getTransacoes();\r\n    }, []);\r\n\r\n    const onChangeSearchTitle = e => {\r\n        const searchTitle = e.target.value;\r\n        setSearchTitle(searchTitle);\r\n    };\r\n\r\n    const getTransacoes = () => {\r\n        TransacaoDataService.getAll()\r\n            .then(response => {\r\n                setTransacoes(response.data);\r\n                console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const getCategorias = () => {\r\n        CategoriaDataService.getAll()\r\n            .then(response => {\r\n                setCategorias(response.data);\r\n                console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const refreshList = () => {\r\n        getTransacoes();\r\n        setCurrentTransacao(null);\r\n        setCurrentIndex(-1);\r\n    };\r\n\r\n    function getCategoria(id) {\r\n        CategoriaDataService.get(id)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                return response.data.nome;\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            });\r\n    }\r\n\r\n    const setActiveTutorial = (tutorial, index) => {\r\n        let categoria = getCategoria(tutorial.categoria);\r\n        let transacao = {\r\n            categoria: categoria,\r\n            created_at: tutorial.created_at,\r\n            id: tutorial.id,\r\n            tipo: tutorial.tipo,\r\n            titulo: tutorial.titulo,\r\n            valor: tutorial.valor\r\n        };\r\n        console.log(transacao)\r\n        setCurrentTransacao(transacao);\r\n        setCurrentIndex(index);\r\n    };\r\n\r\n    const findByTitle = () => {\r\n        TransacaoDataService.findByTitle(searchTitle)\r\n            .then(response => {\r\n                setTransacoes(response.data);\r\n                console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    function arrumar_moeda(numero) {\r\n        return numero.toFixed(2).replace('.', ',');\r\n    }\r\n\r\n    return (\r\n        <div className=\"list row\">\r\n            <div className=\"col-md-8\">\r\n                <div className=\"input-group mb-3\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Search by title\"\r\n                        value={searchTitle}\r\n                        onChange={onChangeSearchTitle}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <button\r\n                            className=\"btn btn-outline-secondary\"\r\n                            type=\"button\"\r\n                            onClick={findByTitle}\r\n                        >\r\n                            Search\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n                <h4>Transações</h4>\r\n\r\n                <ul className=\"list-group\">\r\n                    {transacoes.map((tutorial, index) => (\r\n                        <li\r\n                            className={\r\n                                \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\r\n                            }\r\n                            onClick={() => setActiveTutorial(tutorial, index)}\r\n                            key={index}\r\n                        >\r\n                            {tutorial.titulo}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n\r\n\r\n            <div className=\"col-md-6\">\r\n                {currentTransacao ? (\r\n                    <div>\r\n                        <h4>Transação</h4>\r\n                        <div>\r\n                            <label>\r\n                                <strong>Titulo:</strong>\r\n                            </label>{\" \"}\r\n                            {currentTransacao.titulo}\r\n                        </div>\r\n                        <div>\r\n                            <label>\r\n                                <strong>Valor:</strong>\r\n                            </label>{\" \"}\r\n                            {arrumar_moeda(currentTransacao.valor)}\r\n                        </div>\r\n                        <div>\r\n                            <label>\r\n                                <strong>Tipo:</strong>\r\n                            </label>{\" \"}\r\n                            {currentTransacao.tipo == \"1\" ? \"Entrada\" : \"Saida\"}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label>\r\n                                <strong>Categoria:</strong>\r\n                            </label>{\" \"}\r\n                            {currentTransacao.categoria}\r\n                        </div>\r\n\r\n                        <Link\r\n                            to={\"/transacao/\" + currentTransacao.id}>\r\n                            <Button variant={\"warning\"}>\r\n                                Editar\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <br/>\r\n                        <p></p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TransacaoList;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {Nav, Navbar} from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"dark\" expand=\"lg\" variant={\"dark\"}>\r\n        <Link to={\"/transacoes\"} className=\"nav-link\">\r\n        <Navbar.Brand>React-Bootstrap</Navbar.Brand>\r\n        </Link>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/transacoes\"} className=\"nav-link\">\r\n              Transações\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/add\"} className=\"nav-link\">\r\n                Add\r\n              </Link>\r\n            </li>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport AddTransacao from \"./components/Transacao/AddTransacao\";\r\nimport Transacao from \"./components/Transacao/Transacao\";\r\nimport TransacaoList from \"./components/Transacao/TransacaoList\";\r\nimport Header from \"./Header/Header\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n\r\n      <Container className=\"mt-3\">\r\n        <Switch>\r\n          <Route exact path={[\"/\", \"/transacoes\"]} component={TransacaoList} />\r\n          <Route exact path=\"/add\" component={AddTransacao} />\r\n          <Route path=\"/transacao/:id\" component={Transacao} />\r\n        </Switch>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}